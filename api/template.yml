Transform: "AWS::Serverless-2016-10-31"
Globals:
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Runtime: nodejs10.x
    Tracing: Active
    Environment:
      Variables:
        TABLE_NAME: dev-sw-books
        SIGNING_KEY_NAME: SigningKey
Resources:
########### Lambda ###########
  LambdaLocalCorsStub:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/options/
      Handler: index.handler
      FunctionName: cors_handler_FF
      Timeout: 30
      Events:
        ClockInOptions:
          Type: Api
          Properties:
            RestApiId: !Ref SWBooksAPI
            Path: /{cors+}
            Method: OPTIONSqs

# User
  UserCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/user/create
      Handler: index.handler
      Role: arn:aws:iam::867997404618:role/BasicLambdaRole
      Events:
        Register:
          Type: Api
          Properties:
            Path: /user/create
            Method: post
            RestApiId: !Ref SWBooksAPI

  UserLogin:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/user/login
      Handler: index.handler
      Role: arn:aws:iam::867997404618:role/BasicLambdaRole
      Events:
        Register:
          Type: Api
          Properties:
            Path: /user/login
            Method: post
            RestApiId: !Ref SWBooksAPI

# Books
  SaveBook:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/books/save
      Handler: index.handler
      Role: arn:aws:iam::867997404618:role/BasicLambdaRole
      Events:
        Register:
          Type: Api
          Properties:
            Path: /book
            Method: post
            RestApiId: !Ref SWBooksAPI

  SearchBooks:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/books/search
      Handler: index.handler
      Role: arn:aws:iam::867997404618:role/BasicLambdaRole
      Events:
        Register:
          Type: Api
          Properties:
            Path: /book/search
            Method: get
            RestApiId: !Ref SWBooksAPI

  
########### API ###########
  SWBooksAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: SW-Books
      StageName: dev
      DefinitionBody:
        "Fn::Transform":
          Name: "AWS::Include"
          Parameters:
            Location: s3://sw-books-builds/swagger-api-template.json

########### DB ###########
  SWBooksDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: dev-sw-books
      AttributeDefinitions:
        - AttributeName: identifier
          AttributeType: S
        - AttributeName: resourceDescription
          AttributeType: S
      KeySchema:
        - AttributeName: identifier
          KeyType: HASH
        - AttributeName: resourceDescription
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
