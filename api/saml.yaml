Transform: "AWS::Serverless-2016-10-31"
Globals:
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Runtime: nodejs8.10
    Tracing: Active
Resources:
  ##########################################################
  ###################### Lambda ############################
  ##########################################################

  ##############################
  ########## Books ############
  ##############################
  SaveToReadList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambdas/books/post/
      Handler: index.handler
      Role: !GetAtt LambdaPostAllDynamoDB.Arn
      Events:
        SaveBook:
          Type: Api
          Properties:
            Path: /book
            Method: post
  GetBooks:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambdas/books/get/
      Handler: index.handler
      Role: !GetAtt LambdaQueryDynamoDB.Arn
      Events:
        GetBook:
          Type: Api
          Properties:
            Path: /book
            Method: get

  ##############################
  ######## User Actions #######
  ##############################

  Login:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambdas/users/login/
      Handler: index.handler
      Role: LambdaQueryDynamoDB.Arn
      Timeout: 10
      Events:
        Login:
          Type: Api
          Properties:
            Path: /login
            Method: post
  Register:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambdas/users/register/
      Handler: index.handler
      Role: !GetAtt LambdaPostUsersDynamoDB.Arn  
      Timeout: 10
      Events:
        Register:
          Type: Api
          Properties:
            Path: /register
            Method: post

  ##########################################################
  ###################### Tables ############################
  ##########################################################

  Users:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Users
      PrimaryKey:
        Name: Username
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  Lists:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BookLists
      AttributeDefinitions:
        - AttributeName: UserList
          AttributeType: S
        - AttributeName: BookId
          AttributeType: S
      KeySchema:
        - AttributeName: UserList
          KeyType: HASH
        - AttributeName: BookId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  
 ##########################################################
  ###################### Roles ############################
  ##########################################################

  LambdaPostUsersDynamoDB:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17" # Policy Document
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:BatchWriteItem
            Resource: !GetAtt Users.Arn
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSXrayFullAccess
        - arn:aws:iam::aws:policy/AWSLambdaRole
        - arn:aws:iam::aws:policy/AWSLambdaBasicExecutionRole
      RoleName: LambdaPostUsersDynamoDB

  LambdaPostAllDynamoDB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17" # Policy Document
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:BatchWriteItem
            Resource: !GetAtt Lists.Arn
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSXrayFullAccess
        - arn:aws:iam::aws:policy/AWSLambdaRole
        - arn:aws:iam::aws:policy/AWSLambdaBasicExecutionRole
      RoleName: LambdaPostUsersDynamoDB

  LambdaQueryDynamoDB:
    Type: AWS::IAM::Role
    Properties: 
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSXrayFullAccess
        - arn:aws:iam::aws:policy/AWSLambdaRole
        - arn:aws:iam::aws:policy/AWSLambdaBasicExecutionRole
      RoleName: LambdaQueryDynamoDB
